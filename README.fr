
Le but des exercices dans ce répertoire est de vous familiariser avec la soumission de tâches sur une grappe de calcul. 
Pour ce faire, nous allons utiliser un outil de conversion d'images nommé "filterImage.exe" et une banque d'images. 

===== Récupérer le jeu de données =====
Pour les exercices, nous allons utiliser un jeu de données composé de photos haute résolution. 
Ces photos sont situées dans le dossier /project/6002799/photos.

===== Récupérer les exercices =====
Les exercices sont hébergés sur Github, à l'adresse suivante: 
https://github.com/calculquebec/cq-formation-premiers-pas/tree/slurmcloud

===== Compilation de l'outil ======
L'outil de conversion d'image doit d'abord être créé. Pour ce faire, vous devez d'abord charger les bons modules. 
La compilation requière la bibliothèque boost. Vous pouvez
trouver les bons modules avec la commande

  module avail

Vous devez charger les modules suivants :

  module load gcc boost

Lorsque les modules sont chargés, vous pouvez compiler l'exécutable avec la commande : 

   make

Cela créera un fichier nommé filterImage.exe dans votre répertoire. C'est cet exécutable qui sera utilisé pour
chacun des exercices.

===== Structure des exercices =====
Chacun des exercices est situé dans son propre répertoire. Chaque exercice est accompagné de son fichier README.fr, 
d'un fichier de départ "submit.sh", et d'un fichier de solution "solution.sh".

Voici pour quel type de tâches chacun des exercices est pertinent : 

  * 1-base
    Cet exercice est la base de tous les exercices. Nécessaire pour tous les types de tâches.

  * 2-sequentielles
    Cet exercice est utile si vous avez des tâches séquentielles.

  * 3-gnu-parallel
    Cet exercice est utile si vous avez des tâches séquentielles très courtes (moins d'une heure). 

  * 4-lot-de-taches
    Cet exercice est utile si vous avez un très grand nombre de tâches (plusieurs dizaines, voire des centaines ou milliers)

  * 5-tache-mpi
    Cet exercice est utile si vous avez des tâches parallélisées avec MPI, qui peuvent utiliser plusieurs noeuds de calcul.


