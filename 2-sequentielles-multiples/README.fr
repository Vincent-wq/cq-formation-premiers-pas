Dans cet exercice, on veut appliquer le filtre "grayscale" à plusieurs images.
Afin d'utiliser la totalité des coeurs d'un noeud de calcul, nous voulons lancer l'exécutable
plusieurs fois en parallèle.

==== Caractère "&" ====
Pour ce faire, nous utiliserons une fonctionnalité de bash : le caractère "&" et la commande "wait".
Une commande qui est lancée avec comme suffixe le caractère "&" sera lancée en arrière plan.
La commande retournera immédiatement, même si l'exécution de celle-ci n'est pas terminée.

Ainsi, si l'on exécute :
  ./executable1
  ./executable2

alors les deux exécutables seront exécutés séquentiellement. Si l'on exécute plutôt :
  ./executable1 &
  ./executable2 &

les deux exécutables démarreront en même temps.

==== Commande "wait" ====
Lorsqu'une tâche est lancée, l'ordonnanceur la laisse s'exécuter tant que le script de soumission
n'est pas terminé. Or, ceci n'inclut pas les commandes lancées en arrière plan. Pour éviter
que le script de tâche se termine, il faut utiliser la commande "wait" à la fin du script, de
sorte que l'exécution se poursuive jusqu'à ce que toutes les commandes lancées en arrière plan
soient terminées.


==== Instructions ====
Nous allons utiliser les deux concepts ci-dessus afin de transformer 8 images en tons de gris
à l'aide de l'utilitaire filterImage.exe.

  * Modifier submit.sh pour utiliser une boucle qui lancera en arrière plan la transformation
    des images en ton de gris
  * Soumettre la tâche avec la commande
    msub submit.sh
  * Vérifier que la tâche s'exécute correctement. Des fichiers devraient apparaître dans
    votre répertoire.

==== Pourquoi 8 tâches ? ====
Les noeuds de Colosse possèdent 8 coeurs. Comme les tâches lancées sur Colosse utilisent des
noeuds dédiés, il faut lancer 8 tâches séquentielles afin d'utiliser la totalité des ressources 
allouées.

